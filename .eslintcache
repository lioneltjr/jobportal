[{"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\index.js":"1","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\App.js":"2","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\homepage\\Home.js":"4","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\JobListing.js":"5","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js":"6","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\PostReviewPage.js":"7","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\index.js":"8","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\App.js":"9","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\reportWebVitals.js":"10","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\PostReviewPage.js":"11","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\homepage\\Home.js":"12","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js":"13","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\JobListing.js":"14","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Login.js":"15","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\UserProfile.js":"16","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Navigation.js":"17","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Postjob.js":"18","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\Register.js":"19","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Register.js":"20","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\User.js":"21","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Edit.js":"22","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Postjobtest.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":776,"mtime":1611286028212,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":262,"mtime":1611205364334,"results":"28","hashOfConfig":"25"},{"size":1941,"mtime":1611301243184,"results":"29","hashOfConfig":"25"},{"size":5069,"mtime":1611286043373,"results":"30","hashOfConfig":"25"},{"size":3738,"mtime":1611301186069,"results":"31","hashOfConfig":"25"},{"size":517,"mtime":1611305631481,"results":"32","hashOfConfig":"33"},{"size":1741,"mtime":1611368919996,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1611305631481,"results":"35","hashOfConfig":"33"},{"size":4055,"mtime":1611377616874,"results":"36","hashOfConfig":"33"},{"size":467,"mtime":1611316176371,"results":"37","hashOfConfig":"33"},{"size":6003,"mtime":1611377556073,"results":"38","hashOfConfig":"33"},{"size":4174,"mtime":1611377573642,"results":"39","hashOfConfig":"33"},{"size":2235,"mtime":1611373014444,"results":"40","hashOfConfig":"33"},{"size":4763,"mtime":1611378020666,"results":"41","hashOfConfig":"33"},{"size":1478,"mtime":1611373011436,"results":"42","hashOfConfig":"33"},{"size":5088,"mtime":1611377592564,"results":"43","hashOfConfig":"33"},{"size":7477,"mtime":1611339961149,"results":"44","hashOfConfig":"33"},{"size":5412,"mtime":1611377625369,"results":"45","hashOfConfig":"33"},{"size":1212,"mtime":1611377632174,"results":"46","hashOfConfig":"33"},{"size":4793,"mtime":1611377568999,"results":"47","hashOfConfig":"33"},{"size":6056,"mtime":1611377605791,"results":"48","hashOfConfig":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1lejc9v",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1grmqt2",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\index.js",[],["106","107"],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\App.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\homepage\\Home.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\JobListing.js",["108"],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\PostReviewPage.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\index.js",[],["109","110"],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\PostReviewPage.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\homepage\\Home.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\JobListing.js",["111","112","113"],"import React, { Fragment } from 'react'\r\nimport { Button, Table, Card } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './css/joblisting.css';\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport default function JobListing(props) {\r\n\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n\r\n    //function to get all the job listings in the database\r\n    useEffect(() => {\r\n        axios.get('a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/jobs/search/?id='+2+'&status=Completed').then(res => {\r\n            console.log(res.data);\r\n            setJobs(res.data);\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n            alert(JSON.stringify(error.response.data));\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return <Fragment>\r\n        <div id=\"mylistingpage\">\r\n        {jobs.map(data => {\r\n            return <Card id=\"myjoblistingcard\" style={{ width: '30em'}}>\r\n                <Card.Img variant=\"top\" src=\"https://images.indianexpress.com/2020/03/dog-1-2.jpg\" />\r\n                <Card.Body>\r\n\r\n                    <div>\r\n                        <Card.Title>{data.name}</Card.Title>\r\n                        <footer className=\"blockquote-footer\">\r\n                            Posted by <cite title=\"test\">{data.postedBy}</cite>\r\n                        </footer>\r\n                        <Card.Body>\r\n                        </Card.Body>\r\n                        <Route render={({ history }) => (\r\n                            <Button variant=\"secondary\" id=\"myviewmorebtn\" type='button' onClick={() => { history.push('/jobs/' + data.id, { id: data.id }) }}> View\r\n                            </Button>\r\n                        )} />\r\n                    </div>\r\n                \r\n            </Card.Body>\r\n            </Card>\r\n            })}\r\n            </div>\r\n            {/* <Table striped hover bordered>\r\n            <thead>\r\n                <tr>\r\n                    <th>Job Name</th>\r\n                    <th>Posted By</th>\r\n                    <th>Reward</th>\r\n                    <th>Chat</th>\r\n                    <th>Apply</th>\r\n                </tr>\r\n            </thead>\r\n            {jobs.map(jobs => {\r\n                return <tbody><tr>\r\n                    <td>{jobs.name}</td>\r\n                    <td>{jobs.postedBy}</td>\r\n                    <td>{jobs.price}</td>\r\n                    <td><Button>Chat</Button></td>\r\n                    <td><Route render={({ history }) => (\r\n                        <Button\r\n                            type='button'\r\n                            onClick={() => {\r\n                                history.push('/jobs/' + jobs.id, {\r\n                                    id: jobs.id,\r\n                                })\r\n                            }}\r\n                        >\r\n                            Apply\r\n                        </Button>\r\n                    )} /></td>\r\n                </tr></tbody>\r\n            })}\r\n        </Table> */}\r\n    </Fragment>\r\n\r\n\r\n    {/* <Table striped hover bordered>\r\n            <thead>\r\n                <tr>\r\n                    <th>Job Name</th>\r\n                    <th>Posted By</th>\r\n                    <th>Reward</th>\r\n                    <th>Chat</th>\r\n                    <th>Apply</th>\r\n                </tr>\r\n            </thead>\r\n            {jobs.map(jobs => {\r\n                return <tbody><tr>\r\n                    <td>{jobs.name}</td>\r\n                    <td>{jobs.postedBy}</td>\r\n                    <td>{jobs.price}</td>\r\n                    <td><Button>Chat</Button></td>\r\n                    <td><Route render={({ history }) => (\r\n                        <Button\r\n                            type='button'\r\n                            onClick={() => {\r\n                                history.push('/jobs/' + jobs.id, {\r\n                                    id: jobs.id,\r\n                                })\r\n                            }}\r\n                        >\r\n                            Apply\r\n                        </Button>\r\n                    )} /></td>\r\n                </tr></tbody>\r\n            })}\r\n        </Table> */}\r\n\r\n\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Login.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\UserProfile.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Navigation.js",["114","115"],"import React, { Fragment } from 'react'\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nexport default function Navigation() {\r\n    return <Fragment>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Navbar.Brand href=\"home\">My Handy Job</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"postjob\">Post a Job</Nav.Link>\r\n                    <NavDropdown title=\"My Account\" id=\"basic-nav-dropdown\">\r\n                        <NavDropdown.Item href=\"#action/3.1\">Job Records</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.2\">Alerts</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"#action/3.3\">Messages</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n                {/* <Form inline>\r\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"  />\r\n                </Form> */}\r\n                <div id=\"logoutbtn\"><Button variant=\"light\">Logout</Button> </div>\r\n            </Navbar.Collapse>\r\n            \r\n        </Navbar>\r\n    </Fragment>\r\n}","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Postjob.js",["116","117","118"],"import { useEffect, useState } from \"react\";\r\nimport { Button, Tabs, Tab,  Form, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Postjob() \r\n{\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [Jobs, setJobs] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    axios\r\n      .get(\"a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/jobs\")\r\n      .then((res) => {\r\n        setJobs(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  //This is how we created the createBooks function!\r\n  const createJobs = (event) => {\r\n    event.preventDefault();\r\n    // if (localStorage.getItem(\"token\"))  {\r\n    console.log(event);\r\n    console.log(\"Name\", name);\r\n    console.log(\"description\", description);\r\n    console.log(\"date\", date);\r\n    console.log(\"price\", price);\r\n    console.log(\"address\", address);\r\n \r\n\r\n        axios.post(\"a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/jobs\", {\r\n           name: name,\r\n           description: description,\r\n           date: date,\r\n           price: price,\r\n           address: address,\r\n           status: \"NotCompleted\"\r\n          }\r\n          )\r\n          .then((res) => {\r\n            window.location.reload(false);\r\n            console.log(res.data);\r\n            alert(JSON.stringify(res.data));\r\n          })\r\n          .catch((err) => console.log(err));\r\n      //}\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n    \r\n           \r\n            \r\n                  <div className=\"container\">\r\n                      <Link className=\"btn btn-primary\" to=\"/profile\">\r\n        back to Home\r\n      </Link>\r\n                  <div className=\"w-75 mx-auto shadow p-5\"> \r\n                 \r\n                  <Card className=\"text-center\">\r\n                      <Card.Header>\r\n                     Add Jobs </Card.Header>\r\n                     </Card>\r\n        \r\n                   \r\n                      <Form onSubmit={(event) => createJobs(event)} className=\"m-3\">\r\n                        <Form.Group controlId=\"name\">\r\n                          <Form.Label>Task</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Provide task\"\r\n                            value={name}\r\n                            onChange={(event) => setName(event.target.value)}\r\n                          />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"description\">\r\n                          <Form.Label>description</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Provide description\"\r\n                            value={description}\r\n                            onChange={(event) => setDescription(event.target.value)}\r\n                          />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"date\">\r\n                          <Form.Label>date</Form.Label>\r\n                          <Form.Control\r\n                             type=\"date\"\r\n                             placeholder=\"Provide date\"\r\n                            value={date}\r\n                            onChange={(e) => setDate(e.target.value)}\r\n                          >\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"price\">\r\n                          <Form.Label>price</Form.Label>\r\n                          <Form.Control\r\n                           type=\"text\"\r\n                           placeholder=\"Provide Service charge\"\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                          >\r\n                            \r\n                          </Form.Control>\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"address\">\r\n                          <Form.Label>address</Form.Label>\r\n                          <Form.Control\r\n                           type=\"text\"\r\n                           placeholder=\"Provide address charge\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                          >\r\n                            \r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                      \r\n                        <Button className = \"btn btn-primary btn-block\" type=\"submit\">\r\n                          Add\r\n                        </Button>\r\n                      </Form>\r\n                  \r\n                    </div>\r\n                    </div>\r\n               \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Postjob;","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\Register.js",["119"],"import { useEffect, useState } from \"react\";\r\nimport { Button, Tabs, Tab, Form, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport PlacesAutocomplete, {\r\n    geocodeByAddress,\r\n    getLatLng,\r\n} from 'react-places-autocomplete';\r\nfunction Register() {\r\n   \r\n    const [userName, setUsername] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [phoneNumber, setphoneNumber] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [averageRating, setAverageRating] = useState([]);\r\n    const [address, setAddress] = useState([]);\r\n    const [User, setUser] = useState([]);\r\n    const [coordinates, setCoordinates] = useState({\r\n        lat: null,\r\n        lng: null\r\n      });\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios\r\n            .get(\"http://localhost:8080/user\")\r\n            .then((res) => {\r\n                setUser(res.data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    //This is how we created the createBooks function!\r\n    const registerUser = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios\r\n            .post(\"http://localhost:8080/user\", {\r\n                userName: userName,\r\n                pass: pass,\r\n                age: age,\r\n                phoneNumber: phoneNumber,\r\n                email: email,\r\n                averageRating: averageRating,\r\n                address: address,\r\n            }\r\n            )\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            })\r\n            .catch((err) => console.log(err));\r\n\r\n    }\r\n\r\n\r\n    const handleSelect = async value => {\r\n        const results = await geocodeByAddress(value);\r\n        const latLng = await getLatLng(results[0]);\r\n        setAddress(value);\r\n        setCoordinates(latLng);\r\n      };\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"App mt-5\">\r\n            <PlacesAutocomplete\r\n        value={address}\r\n        onChange={setAddress}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <p>Latitude: {coordinates.lat}</p>\r\n            <p>Longitude: {coordinates.lng}</p>\r\n\r\n            <input {...getInputProps({ placeholder: \"Type address\" })} />\r\n\r\n            <div>\r\n              {loading ? <div>...loading</div> : null}\r\n\r\n              {suggestions.map(suggestion => {\r\n                const style = {\r\n                  backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\r\n                };\r\n\r\n                return (\r\n                  <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                    {suggestion.description}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n\r\n            <Tabs defaultActiveKey=\"adduser\" id=\"uncontrolled-tab-example\">\r\n\r\n\r\n                <Tab eventKey=\"adduser\" name=\"Register User\">\r\n                    <h1 className=\"m-5\">Register User</h1>\r\n\r\n\r\n                    <Card className=\"bg-light mx-auto\" style={{ width: \"30rem\" }}>\r\n                        <Card.Header>Register User</Card.Header>\r\n\r\n\r\n                        <Form onSubmit={(event) => registerUser(event)} className=\"m-3\">\r\n                            <Form.Group controlId=\"name\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Username\"\r\n                                    value={userName}\r\n                                    onChange={(event) => setUsername(event.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter password\"\r\n                                    value={pass}\r\n                                    onChange={(event) => setPass(event.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"age\">\r\n                                <Form.Label>Age</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter age\"\r\n                                    value={age}\r\n                                    onChange={(e) => setAge(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"ph\">\r\n                                <Form.Label>Phone Number</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Phonenumber\"\r\n                                    value={phoneNumber}\r\n                                    onChange={(e) => setphoneNumber(e.target.value)}\r\n                                >\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"mail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Email Address\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId=\"address\">\r\n                          <Form.Label>Address</Form.Label>\r\n                          <Form.Control\r\n                           type=\"text\"\r\n                           placeholder=\"Enter Address\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                          >\r\n                            \r\n                          </Form.Control>\r\n                        </Form.Group> */}\r\n\r\n\r\n                            <Form.Group controlId=\"rating\">\r\n                                <Form.Label>Average Rating</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Provide Average rating\"\r\n                                    value={averageRating}\r\n                                    onChange={(e) => setAverageRating(e.target.value)}\r\n                                >\r\n\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Register\r\n                        </Button>\r\n                        </Form>\r\n                    </Card>\r\n                </Tab>\r\n\r\n\r\n\r\n\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Register;",["120","121"],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Register.js",["122"],"import { useEffect, useState } from \"react\";\r\nimport { Button, Tabs, Tab,  Form, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nfunction Register() \r\n{\r\n\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const [phoneNumber, setphoneNumber] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [averageRating, setAverageRating] = useState([]);\r\n  const [User, setUser] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    axios\r\n      .get(\"a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/user\")\r\n      .then((res) => {\r\n        setUser(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  //This is how we created the createBooks function!\r\n  const registerUser = (event) => {\r\n    event.preventDefault();\r\n\r\n        axios\r\n          .post(\"a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/user\", {\r\n            userName: userName,\r\n            pass: pass,\r\n            age: age,\r\n            phoneNumber: phoneNumber,\r\n            email: email,\r\n            averageRating: averageRating,\r\n          \r\n          }\r\n          )\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          })\r\n          .catch((err) => console.log(err));\r\n     \r\n    }\r\n    \r\n\r\n\r\n    return(\r\n    \r\n            <div className=\"App mt-5\">\r\n           \r\n              <Tabs defaultActiveKey=\"adduser\" id=\"uncontrolled-tab-example\">\r\n               \r\n             \r\n                  <Tab eventKey=\"adduser\" name=\"Register User\">\r\n                    <h1 className=\"m-5\">Register User</h1>\r\n        \r\n                 \r\n                    <Card className=\"bg-light mx-auto\" style={{ width: \"30rem\" }}>\r\n                      <Card.Header>Register User</Card.Header>\r\n        \r\n                   \r\n                      <Form onSubmit={(event) => registerUser(event)} className=\"m-3\">\r\n                        <Form.Group controlId=\"name\">\r\n                          <Form.Label>Username</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Username\"\r\n                            value={userName}\r\n                            onChange={(event) => setUsername(event.target.value)}\r\n                          />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"password\">\r\n                          <Form.Label>Password</Form.Label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter password\"\r\n                            value={pass}\r\n                            onChange={(event) => setPass(event.target.value)}\r\n                          />\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"age\">\r\n                          <Form.Label>Age</Form.Label>\r\n                          <Form.Control\r\n                             type=\"text\"\r\n                             placeholder=\"Enter age\"\r\n                            value={age}\r\n                            onChange={(e) => setAge(e.target.value)}\r\n                          >\r\n                          </Form.Control>\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"ph\">\r\n                          <Form.Label>Phone Number</Form.Label>\r\n                          <Form.Control\r\n                           type=\"text\"\r\n                           placeholder=\"Enter Phonenumber\"\r\n                            value={phoneNumber}\r\n                            onChange={(e) => setphoneNumber(e.target.value)}\r\n                          >\r\n                            \r\n                          </Form.Control>\r\n                        </Form.Group>\r\n        \r\n                        <Form.Group controlId=\"mail\">\r\n                          <Form.Label>Email</Form.Label>\r\n                          <Form.Control\r\n                           type=\"text\"\r\n                           placeholder=\"Enter Email Address\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                          >\r\n                            \r\n                          </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"rating\">\r\n                          <Form.Label>Average Rating</Form.Label>\r\n                          <Form.Control\r\n                           type=\"text\"\r\n                           placeholder=\"Provide Average rating\"\r\n                            value={averageRating}\r\n                            onChange={(e) => setAverageRating(e.target.value)}\r\n                          >\r\n                            \r\n                          </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                          Register\r\n                        </Button>\r\n                      </Form>\r\n                    </Card>\r\n                  </Tab>\r\n             \r\n        \r\n              \r\n               \r\n              </Tabs>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Register;","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\User.js",["123"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst User = () => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    description: \" \",\r\n    date: \" \",\r\n    price: \" \",\r\n    address: \" \"\r\n  });\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n  const loadUser = async () => {\r\n    const res = await axios.get(`a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/jobs/${id}`);\r\n    setUser(res.data);\r\n  };\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <Link className=\"btn btn-primary\" to=\"/profile\">\r\n        back to Home\r\n      </Link>\r\n      <h1 className=\"display-4\">Job Id: {id}</h1>\r\n      <hr />\r\n      <ul className=\"list-group w-50\">\r\n        <li className=\"list-group-item\">Task: {user.name}</li>\r\n        <li className=\"list-group-item\">Description: {user.description}</li>\r\n        <li className=\"list-group-item\">Date: {user.date}</li>\r\n        <li className=\"list-group-item\">Price: {user.price}</li>\r\n        <li className=\"list-group-item\">Address: {user.address}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Edit.js",["124"],"import { useEffect, useState } from \"react\";\r\nimport { Button} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport {useHistory,useParams } from \"react-router-dom\"\r\nconst Edit = () =>\r\n{\r\nconst {id} = useParams();\r\n let history = useHistory();\r\n  const [user, setUser] = useState(\r\n      {\r\n        name: \"\",\r\n        description: \" \",\r\n        date: \" \",\r\n        price: \" \",\r\n        address: \" \"\r\n      }\r\n  );\r\nconst { name, description, date, price, address} = user;\r\n\r\nconst onInputChange = e => {\r\n    setUser({ ...user, [e.target.name]:e.target.value});\r\n};\r\n\r\n  useEffect(() => { \r\n  loadUser();\r\n  },[]);\r\n\r\n  const onUpdate =  (e) => \r\n  {\r\n    console.log(\"welcome\");\r\n    e.preventDefault()\r\n        axios.put(`a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/jobs/` +id ,user)\r\n        .then(res => {\r\n            window.location.reload(false);\r\n            console.log(res.data);\r\n            alert(JSON.stringify(res.data));\r\n          })\r\n      history.push(\"/profile\")\r\n  }\r\n\r\n\r\n  //This is how we created the createBooks function!\r\n  \r\n\r\n    const loadUser = async() =>\r\n    {\r\n        const result = await axios.get(`a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/jobs/${id}`)\r\n        setUser(result.data)\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n    \r\n            <div className=\"container\">\r\n                <div className=\"w-75 mx-auto shadow p-5\"> \r\n                <h2 className = \"text-center mb-4\" > Edit Job </h2>\r\n                      <form>\r\n                      <div className = \"form-group\">\r\n                        < input\r\n                        className = \"form-control form-control-lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Provide id\"\r\n                            name=\"id\"\r\n                            value={id}\r\n                            onChange={e => onInputChange(e)}\r\n                          />\r\n                       </div>\r\n                          <div className = \"form-group\">\r\n                        < input\r\n                        className = \"form-control form-control-lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Provide task\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onInputChange(e)}\r\n                          />\r\n                       </div>\r\n                       <div className = \"form-group\">\r\n                        < input\r\n                        className = \"form-control form-control-lg\"\r\n                            type=\"text\"\r\n                            placeholder=\"Provide description\"\r\n                            name=\"description\"\r\n                            value={description}\r\n                            onChange={e => onInputChange(e)}\r\n                          />\r\n                     </div>\r\n                     <div className = \"form-group\">\r\n                        < input\r\n                        className = \"form-control form-control-lg\"\r\n                             type=\"date\"\r\n                             placeholder=\"Provide date\"\r\n                             name=\"date\"\r\n                            value={date}\r\n                            onChange={e => onInputChange(e)}\r\n                          />\r\n                        </div>\r\n        \r\n                        <div className = \"form-group\">\r\n                        < input\r\n                        className = \"form-control form-control-lg\"\r\n                           type=\"text\"\r\n                           placeholder=\"Provide Service charge\"\r\n                           name=\"price\"\r\n                            value={price}\r\n                            onChange={e => onInputChange(e)}\r\n                          />\r\n                            \r\n                            </div>\r\n        \r\n                        <div className = \"form-group\">\r\n                        < input\r\n                        className = \"form-control form-control-lg\"\r\n                           type=\"text\"\r\n                           placeholder=\"Provide address charge\"\r\n                           name=\"address\"\r\n                            value={address}\r\n                            onChange={e => onInputChange(e)}\r\n                          />\r\n                            \r\n                            </div>\r\n                        \r\n                        <Button className = \"btn btn-warning btn-block\" onClick = {(e) => onUpdate(e) } >\r\n                          Update\r\n                        </Button>\r\n                      </form>\r\n            \r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Edit;","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Postjobtest.js",["125","126","127"],"import { useEffect, useState, Fragment } from \"react\";\r\nimport { Button, Tabs, Tab, Form, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport Navigation from \"./Navigation\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport './css/joblisting.css';\r\n\r\nfunction Postjobtest() {\r\n\r\n\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [Jobs, setJobs] = useState([]);\r\n  const [coordinates, setCoordinates] = useState({\r\n    lat: null,\r\n    lng: null\r\n  });\r\n\r\n  const handleSelect = async value => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    axios\r\n      .get(\"a86c34b8af1be4fd7a3990c49bb5b98e-1786563949.ap-southeast-1.elb.amazonaws.com:8080/jobs\")\r\n      .then((res) => {\r\n        setJobs(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  //This is how we created the createBooks function!\r\n  const createJobs = (event) => {\r\n    event.preventDefault();\r\n    // if (localStorage.getItem(\"token\"))  {\r\n    console.log(event);\r\n    console.log(\"Name\", name);\r\n    console.log(\"description\", description);\r\n    console.log(\"date\", date);\r\n    console.log(\"price\", price);\r\n    console.log(\"address\", address);\r\n\r\n\r\n    axios.post(\"a36cdfde5edb54fc1be39fc625215c59-327723398.ap-southeast-1.elb.amazonaws.com:8080/jobs\", {\r\n      name: name,\r\n      description: description,\r\n      date: date,\r\n      price: price,\r\n      address: address,\r\n      status: \"NotCompleted\"\r\n    }\r\n    )\r\n      .then((res) => {\r\n        window.location.reload(false);\r\n        console.log(res.data);\r\n        alert(JSON.stringify(res.data));\r\n      })\r\n      .catch((err) => console.log(err));\r\n    //}\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      <MapContainer id=\"mymapcontainer\" center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://developers.onemap.sg/commonapi/staticmap/getStaticImage?layerchosen=grey&lat=1.31955&lng=103.84223&zoom=17&height=512&width=512&polygons=&lines=&points=&color=&fillColor=\"\r\n          />\r\n          <Marker position={[51.505, -0.09]}>\r\n            <Popup>\r\n              A pretty CSS3 popup. <br /> Easily customizable.\r\n            </Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n      <Navigation />\r\n\r\n      <div className=\"container\">\r\n        \r\n        <div className=\"w-75 mx-auto shadow p-5\">\r\n\r\n          <Card className=\"text-center\">\r\n            <Card.Header>\r\n              Add Jobs </Card.Header>\r\n          </Card>\r\n\r\n\r\n          <Form onSubmit={(event) => createJobs(event)} className=\"m-3\">\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Task</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Provide task\"\r\n                value={name}\r\n                onChange={(event) => setName(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Provide description\"\r\n                value={description}\r\n                onChange={(event) => setDescription(event.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"date\">\r\n              <Form.Label>Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                placeholder=\"Provide date\"\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n              >\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Provide Service charge\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              >\r\n\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"address\">\r\n              <Form.Label>Address</Form.Label>\r\n              <PlacesAutocomplete\r\n                value={address}\r\n                onChange={setAddress}\r\n                onSelect={handleSelect}\r\n              >\r\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                  <div>\r\n                    <p>Latitude: {coordinates.lat}</p>\r\n                    <p>Longitude: {coordinates.lng}</p>\r\n                    <Form.Control {...getInputProps({ placeholder: \"Type address\" })} />\r\n\r\n                    <div>\r\n                      {loading ? <div>...loading</div> : null}\r\n\r\n                      {suggestions.map(suggestion => {\r\n                        const style = {\r\n                          backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\r\n                        };\r\n\r\n                        return (\r\n                          <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                            {suggestion.description}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>)}</PlacesAutocomplete>\r\n\r\n            </Form.Group>\r\n\r\n            <Button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n              Add\r\n                        </Button>\r\n          </Form>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Postjobtest;",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":25},{"ruleId":"128","replacedBy":"136"},{"ruleId":"130","replacedBy":"137"},{"ruleId":"132","severity":1,"message":"138","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":85,"column":5,"nodeType":"141","messageId":"142","endLine":115,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":85,"column":5,"nodeType":"141","messageId":"145","endLine":115,"endColumn":21},{"ruleId":"132","severity":1,"message":"146","line":2,"column":36,"nodeType":"134","messageId":"135","endLine":2,"endColumn":40},{"ruleId":"132","severity":1,"message":"147","line":2,"column":42,"nodeType":"134","messageId":"135","endLine":2,"endColumn":53},{"ruleId":"132","severity":1,"message":"148","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"149","line":2,"column":24,"nodeType":"134","messageId":"135","endLine":2,"endColumn":27},{"ruleId":"132","severity":1,"message":"150","line":14,"column":10,"nodeType":"134","messageId":"135","endLine":14,"endColumn":14},{"ruleId":"132","severity":1,"message":"151","line":18,"column":12,"nodeType":"134","messageId":"135","endLine":18,"endColumn":16},{"ruleId":"128","replacedBy":"152"},{"ruleId":"130","replacedBy":"153"},{"ruleId":"132","severity":1,"message":"151","line":14,"column":10,"nodeType":"134","messageId":"135","endLine":14,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":16,"column":6,"nodeType":"156","endLine":16,"endColumn":8,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"155","line":27,"column":5,"nodeType":"156","endLine":27,"endColumn":7,"suggestions":"158"},{"ruleId":"132","severity":1,"message":"148","line":2,"column":18,"nodeType":"134","messageId":"135","endLine":2,"endColumn":22},{"ruleId":"132","severity":1,"message":"149","line":2,"column":24,"nodeType":"134","messageId":"135","endLine":2,"endColumn":27},{"ruleId":"132","severity":1,"message":"150","line":22,"column":10,"nodeType":"134","messageId":"135","endLine":22,"endColumn":14},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'IndividualJobPage' is defined but never used.","Identifier","unusedVar",["159"],["160"],"'Table' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","'Form' is defined but never used.","'FormControl' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Jobs' is assigned a value but never used.","'User' is assigned a value but never used.",["159"],["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},"Update the dependencies array to be: [loadUser]",{"range":"166","text":"167"},{"range":"168","text":"167"},[366,368],"[loadUser]",[665,667]]