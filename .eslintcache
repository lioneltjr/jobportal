[{"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\index.js":"1","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\App.js":"2","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\reportWebVitals.js":"3","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\homepage\\Home.js":"4","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\JobListing.js":"5","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js":"6","C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\PostReviewPage.js":"7","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\index.js":"8","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\App.js":"9","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\reportWebVitals.js":"10","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\PostReviewPage.js":"11","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\homepage\\Home.js":"12","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js":"13","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\JobListing.js":"14","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Login.js":"15","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\UserProfile.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":776,"mtime":1611286028212,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":262,"mtime":1611205364334,"results":"21","hashOfConfig":"18"},{"size":1941,"mtime":1611301243184,"results":"22","hashOfConfig":"18"},{"size":5069,"mtime":1611286043373,"results":"23","hashOfConfig":"18"},{"size":3738,"mtime":1611301186069,"results":"24","hashOfConfig":"18"},{"size":517,"mtime":1611305631481,"results":"25","hashOfConfig":"26"},{"size":1031,"mtime":1611308322921,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1611305631481,"results":"28","hashOfConfig":"26"},{"size":3738,"mtime":1611305631482,"results":"29","hashOfConfig":"26"},{"size":293,"mtime":1611307533480,"results":"30","hashOfConfig":"26"},{"size":5069,"mtime":1611305631480,"results":"31","hashOfConfig":"26"},{"size":1941,"mtime":1611305631479,"results":"32","hashOfConfig":"26"},{"size":2233,"mtime":1611307533479,"results":"33","hashOfConfig":"26"},{"size":6962,"mtime":1611308302504,"results":"34","hashOfConfig":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1lejc9v",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1grmqt2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\index.js",[],["71","72"],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\App.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\homepage\\Home.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\JobListing.js",["73"],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js",[],"C:\\Users\\ASUS\\Documents\\dev\\jobportal\\src\\components\\PostReviewPage.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\index.js",[],["74","75"],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\PostReviewPage.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\homepage\\Home.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\individualjobpage\\IndividualJobPage.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\JobListing.js",["76"],"import React, { Fragment } from 'react'\r\nimport {  Button, Table } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './css/joblisting.css';\r\nimport IndividualJobPage from './individualjobpage/IndividualJobPage';\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport default function JobListing(props) {\r\n\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n\r\n    //function to get all the job listings in the database\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/jobs/status/NotCompleted').then(res => {\r\n            console.log(res.data);\r\n            setJobs(res.data);\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n            alert(JSON.stringify(error.response.data));\r\n        });\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return <Fragment>\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Job Name</th>\r\n                    <th>Posted By</th>\r\n                    <th>Reward</th>\r\n                    <th>Chat</th>\r\n                    <th>Apply</th>\r\n                </tr>\r\n            </thead>\r\n            {jobs.map(jobs => {\r\n                return <tr>\r\n                    <td>{jobs.name}</td>\r\n                    <td>{jobs.postedBy}</td>\r\n                    <td>{jobs.price}</td>\r\n                    <td><Button>Chat</Button></td>\r\n                    <td><Route render={({ history }) => (\r\n                        <Button\r\n                            type='button'\r\n                            onClick={() => {\r\n                                history.push('/jobs/' + jobs.id, {\r\n                                    id: jobs.id,\r\n                                })\r\n                            }}\r\n                        >\r\n                            Apply\r\n                        </Button>\r\n                    )} /></td>\r\n                </tr>\r\n            })}\r\n        </Table>\r\n    </Fragment>\r\n\r\n\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\Login.js",[],"C:\\Users\\ASUS\\Desktop\\test\\jobportal\\src\\components\\UserProfile.js",["77"],"import { Button, Card, Form, Table, Tabs } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from 'react';\r\nimport {  Tab } from 'bootstrap';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { Link } from 'react-router-dom';\r\nfunction UserProfile()\r\n{\r\n    const [id, setId] = useState('');\r\n  const [Jobs, setJobs] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  \r\n  const [update, setUpdate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8080/jobs').then(res => {\r\n      console.log(res.data);\r\n      setJobs(res.data);\r\n    })\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n    const updateJobs = (event) => {\r\n        event.preventDefault();\r\n        \r\n          axios\r\n            .put(\"http://localhost:8080/jobs/\" + id, \r\n            {\r\n                id:id,\r\n                name: name,\r\n                description: description,\r\n                date: date,\r\n                price: price,\r\n                address: address,\r\n              \r\n            })\r\n            .then((res) => {\r\n                window.location.reload(false);\r\n                alert(JSON.stringify(res.data));\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n     \r\n    \r\n      const deleteJobs = (event) => {\r\n       let element = event.currentTarget;\r\n       console.log(element.id);\r\n          axios\r\n            .delete(\"http://localhost:8080/jobs/\" + element.id)\r\n            .then((res) => {\r\n                if (res.status === 204) {\r\n                    console.log('Deleting!');\r\n                    element.parentNode.parentNode.remove();\r\n                   alert(\"Job Deleted\")\r\n                  }\r\n              console.log(res.data);\r\n             \r\n              setUpdate(!update);\r\n            })\r\n            .catch((err) => console.log(err));\r\n        }\r\n     \r\n                  \r\n     \r\n    return(\r\n        \r\n        <Tabs defaultActiveKey=\"myJobs\" id=\"uncontrolled-tab-example\">    \r\n      \r\n          <Tab eventKey=\"myJobs\" Task=\"My Jobs\" title = \"Current JobListing\">\r\n            <h1 className=\"m-5\">My Jobs</h1>\r\n            <div className=\"mx-5\">\r\n              <Table striped bordered hover variant=\"outlined-light\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Task</th>\r\n                    <th>Desc</th>\r\n                    <th>Date</th>\r\n                    <th>Servicecharge</th>\r\n                    <th>Address</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n            {\r\n                    Jobs.map((element) => {\r\n                   \r\n                        return  <tr key={element.id} id = {element.id}> \r\n                            <td>{element.id}</td>\r\n                            <td>{element.name}</td>\r\n                            <td>{element.description}</td>\r\n                            <td>{element.date}</td>\r\n                            <td>{element.price}</td>\r\n                            <td>{element.address}</td>\r\n                            <td>\r\n                              <Button\r\n                                variant=\"outline-warning\"\r\n                                // onClick={ } \r\n                              >\r\n                                Edit\r\n                              </Button>\r\n                            </td>\r\n                            <td>\r\n                              <Button\r\n                                variant=\"outline-danger\" id = {element.id}\r\n                                onClick={(event) => deleteJobs(event)}\r\n                              >\r\n                                Delete\r\n                              </Button>\r\n                            </td>\r\n                          </tr>\r\n                        \r\n                      }\r\n                    )}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Tab>\r\n         \r\n          <Tab\r\n            eventKey=\"editjob\" title = \"Edit job\">\r\n            <h1 className=\"m-5\">Edit Job information</h1>\r\n            <div className=\"form-popup\" id={\"myForm\"}>\r\n            {/* <div className=\"mx-5\"> */}\r\n            <Card className=\"bg-light mx-auto\" style={{ width: \"30rem\" }}>\r\n              <Card.Header>Edit Job information</Card.Header>\r\n        \r\n              <Form\r\n                className=\"m-3\"\r\n              >\r\n                  <Form.Group controlId=\"Task\">\r\n                  <Form.Label>Id</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={id}\r\n                    onChange={(event) => setId(event.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"Task\">\r\n                  <Form.Label>Task</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(event) => setName(event.target.value)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Desc\">\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={(event) => setDescription(event.target.value)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Date\">\r\n                  <Form.Label>Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    value={date}\r\n                    onChange={(event) => setDate(event.target.value)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"Servicecharge\">\r\n                  <Form.Label>Servicecharge</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={price}\r\n                    onChange={(event) => setPrice(event.target.value)}\r\n                  />\r\n                </Form.Group> \r\n                <Form.Group controlId=\"Address\">\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={address}\r\n                    onChange={(event) => setAddress(event.target.value)}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={(event) => updateJobs(event)}>\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            </Card>\r\n            </div>\r\n          </Tab>\r\n      \r\n      </Tabs>\r\n    )\r\n}\r\nexport default UserProfile;",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":25},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"82","severity":1,"message":"83","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":25},{"ruleId":"82","severity":1,"message":"88","line":7,"column":10,"nodeType":"84","messageId":"85","endLine":7,"endColumn":14},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'IndividualJobPage' is defined but never used.","Identifier","unusedVar",["89"],["90"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]